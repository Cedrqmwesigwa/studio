// src/ai/flows/automated-image-tagging.ts
'use server';

/**
 * @fileOverview This file defines a Genkit flow for automatically tagging and categorizing project photos using AI-driven image analysis.
 *
 * - `tagImage` - A function that takes an image data URI and returns a list of tags.
 * - `TagImageInput` - The input type for the tagImage function.
 * - `TagImageOutput` - The return type for the tagImage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TagImageInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a project, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type TagImageInput = z.infer<typeof TagImageInputSchema>;

const TagImageOutputSchema = z.object({
  tags: z
    .array(z.string())
    .describe('A list of tags generated by the AI for the image.'),
});
export type TagImageOutput = z.infer<typeof TagImageOutputSchema>;

export async function tagImage(input: TagImageInput): Promise<TagImageOutput> {
  return tagImageFlow(input);
}

const tagImagePrompt = ai.definePrompt({
  name: 'tagImagePrompt',
  input: {schema: TagImageInputSchema},
  output: {schema: TagImageOutputSchema},
  prompt: `You are an expert in image recognition and categorization.
  Analyze the image and generate a list of relevant tags that describe the image.
  These tags should be useful for searching and filtering the image later.

  Image: {{media url=photoDataUri}}

  Return only an array of relevant tags.`,
});

const tagImageFlow = ai.defineFlow(
  {
    name: 'tagImageFlow',
    inputSchema: TagImageInputSchema,
    outputSchema: TagImageOutputSchema,
  },
  async input => {
    const {output} = await tagImagePrompt(input);
    return output!;
  }
);
